(1)번에서 한사람씩 정해진 유형에 1문제를 선별하고 최종적으로 정해진 3문제는 3사람이 전부 풀어오는걸로
이걸로 각자 풀었던 방법이나 막현던 부분을 토론, 리팩토링 , 


3명다 못푼경우에는..? 어떻게 할것인지
사용언어의 차이 저같은 경우는 파이썬밖에 배우지않았기떄문에 당장 자바로 정답률 35%의 문제를 해결하기 어려움
 정답률 35% 비중의 문제의 난이도가 높을시 5%씩 추가해서 풀어보고 5%씩 추가해서 풀때마다 주당3문제에서 1문제
씩 늘려간다
// 못푼 경우는 고려해보지않음

(6)번같은경우 있어서는 안되지만 개인사정이있을시 사전에 풀이과정 방식을 작성해서 스터디에 보내주기로함


인원모두가 정답률35% 이상의 문제를 기본적으로 풀수있을때 대회에 참가하는지? 정확한 시점 필요
// 개인적으로는 계획 없음


두가지 언어로 풀어보기? c++로도 풀어보고 파이썬으로도 풀어보고
// ㅇㅋ

코딩테스트에서 자주 사용하는 언어 /코드업사이트 기초100제를 c++과 파이썬으로 먼저 풀고 백준 알고리즘 문제 해결하는 방향은 어떤지
c++ python 둘다 사용
// 100제를 모두 푸는 경우, 1주에 몇문제 풀지, 그리고 몇주차에 다 풀 수 있는지 계산

코딩테스트 참가목적에 맞게 가장빈번히 출제되는 문제부터 자주틀리는 문제 유형 위주의 준비에 비중을 높게 둔다

그리디,완전탐색 중요(난이도는 낮지만 중요도가 높은 항목)

자주 나오는 유형과 난이도

해시 - 높음
스택/큐 -보통
힙 - 보통		
정렬 - 높음	// 높음 -> 구현 방식으로
완전탐색 - 높음
그리디 -낮음
동적계획법 - 낮음	// 높음
dfs/bfs - 높음	// 높음
이분탐색 - 낮음	//
그래프 - 낮음	// 높음